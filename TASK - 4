def create_board():
    return [[[' ' for _ in range(3)] for _ in range(3)] for _ in range(3)]

def print_board(board):
    for layer in range(3):
        print(f"Layer {layer + 1}")
        for row in board[layer]:
            print('|'.join(row))
        print("-" * 5)

def is_winner(board, player)
    for z in range(3):
        for i in range(3):
            if all(board[z][i][j] == player for j in range(3)):  # Rows
                return True
            if all(board[z][j][i] == player for j in range(3)):  # Columns
                return True
        if all(board[z][i][i] == player for i in range(3)):  # Diagonal TL-BR in a layer
            return True
        if all(board[z][i][2 - i] == player for i in range(3)):  # Diagonal TR-BL in a layer
            return True

    for x in range(3):
        for y in range(3):
            if all(board[z][x][y] == player for z in range(3)):
                return True

    if all(board[i][i][i] == player for i in range(3)):
        return True
    if all(board[i][i][2 - i] == player for i in range(3)):
        return True
    if all(board[i][2 - i][i] == player for i in range(3)):
        return True
    if all(board[i][2 - i][2 - i] == player for i in range(3)):
        return True

    return False

def is_draw(board):
    return all(board[z][x][y] != ' ' for z in range(3) for x in range(3) for y in range(3))

def play_game():
    board = create_board()
    current_player = 'X'

    while True:
        print_board(board)
        print(f"Player {current_player}'s turn.")
        try:
            z = int(input("Enter layer (1-3): ")) - 1
            x = int(input("Enter row (1-3): ")) - 1
            y = int(input("Enter column (1-3): ")) - 1
        except ValueError:
            print("Invalid input. Please enter numbers only.")
            continue

        if not (0 <= z < 3 and 0 <= x < 3 and 0 <= y < 3):
            print("Invalid position. Try again.")
            continue
        if board[z][x][y] != ' ':
            print("Cell already taken. Try again.")
            continue

        board[z][x][y] = current_player

        if is_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        if is_draw(board):
            print_board(board)
            print("It's a draw!")
            break

        current_player = 'O' if current_player == 'X' else 'X'

play_game()
